@startuml
!include style.puml

box Ui UI_COLOR_T1
participant "m:MainWindow" as MainWindow UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant "c:ImportCommand" as ImportCommand LOGIC_COLOR
participant "uiEffect: ImportUiConsumer" as UiConsumer LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> MainWindow : executeCommand("import")
activate MainWindow

MainWindow -> LogicManager : execute("import")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("import")
activate AddressBookParser

create ImportCommand
AddressBookParser -> ImportCommand
activate ImportCommand

ImportCommand --> AddressBookParser
deactivate ImportCommand

AddressBookParser --> LogicManager : c
deactivate AddressBookParser

LogicManager -> ImportCommand : execute()
activate ImportCommand


create UiConsumer
ImportCommand -> UiConsumer
activate UiConsumer
UiConsumer --> ImportCommand
deactivate UiConsumer

create CommandResult
ImportCommand -> CommandResult : new CommandResult(.., uiEffect)
activate CommandResult

CommandResult --> ImportCommand
deactivate CommandResult
ImportCommand --> LogicManager : result
deactivate ImportCommand
ImportCommand -[hidden]-> LogicManager : result
destroy ImportCommand

MainWindow<--LogicManager : result
deactivate LogicManager

MainWindow -> CommandResult : executeUiEffect(this)
activate CommandResult

CommandResult -> UiConsumer : accept(m)
activate UiConsumer

UiConsumer -> MainWindow : handleFileChooser()
activate MainWindow

MainWindow --> UiConsumer :fileToImport
deactivate MainWindow

UiConsumer -> Model : setAddressBook()
activate Model
deactivate Model

UiConsumer --> CommandResult
deactivate UiConsumer

CommandResult --> MainWindow
deactivate CommandResult


@enduml
